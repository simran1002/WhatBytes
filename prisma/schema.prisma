generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  password  String
  email     String   @unique
  createdAt DateTime @default(now())

  tasks     Task[]   @relation("UserAssignedTasks")
  projects  Project[]

  // Optional: Cascade deletion of associated projects and tasks when a user is deleted
  @@map("users")
}

model Project {
  id          String   @id @default(uuid()) @db.Uuid
  name        String
  description String
  status      ProjectStatus
  createdAt   DateTime @default(now())

  userId      String   @db.Uuid  // Ensure UUID type
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  tasks       Task[]

  @@map("projects")
}



model Task {
  id             String   @id @default(uuid()) @db.Uuid
  title          String
  description    String
  status        TaskStatus
  createdAt      DateTime @default(now())

  assignedUserId String   @db.Uuid  
  assignedUser   User     @relation("UserAssignedTasks", fields: [assignedUserId], references: [id], onDelete: Cascade)

  projectId      String   @db.Uuid 
  project        Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("tasks")
}

enum ProjectStatus {
  PLANNED
  ONGOING
  COMPLETED
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
}
